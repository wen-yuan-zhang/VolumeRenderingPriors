general {
    base_exp_dir = ./log/DTU/CASE_NAME
}

dataset {
    type = dtu
    data_dir = data/DTU/CASE_NAME
    render_cameras_name = cameras_sphere.npz
    object_cameras_name = cameras_sphere.npz
}

train {
    learning_rate = 5e-4
    learning_rate_alpha = 0.05
    end_iter = 300000

    batch_size = 512
    validate_resolution_level = 4
    warm_up_end = 5000
    anneal_end = 10000
    neus_init_end = 20000
    use_white_bkgd = False

    save_freq = 10000
    val_freq = 5000
    val_mesh_freq = 2500
    report_freq = 200

    igr_weight = 0.1
    mask_weight = 0.0
    smooth_weight = 0.0
}

model {
    window_size = 11,
    mlp_type = udfxsdf,
    nerf {
        D = 8,
        d_in = 4,
        d_in_view = 3,
        W = 256,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips=[4],
        use_viewdirs=True
    }

    sdf_network {
        d_out = 257,
        d_in = 3,
        d_hidden = 256,
        n_layers = 8,
        skip_in = [4],
        multires = 6,
        bias = 0.5,
        scale = 1.0,
        geometric_init = True,
        weight_norm = True,
        activ = abs,
    }

    variance_network {
        init_val = 0.3
    }

    rendering_network {
        d_feature = 256,
        mode = idr,
        d_in = 9,
        d_out = 3,
        d_hidden = 256,
        n_layers = 4,
        weight_norm = True,
        multires_view = 4,
        squeeze_out = True,
    }

    neus_renderer {
        n_samples = 64,
        n_importance = 64,
        n_outside = 32,
        up_sample_steps = 4,
        perturb = 1.0,
    }
}
